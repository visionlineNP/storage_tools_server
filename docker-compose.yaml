services:
  nginx-sts:
    image: weseek/nginx-auth-ldap:1.13.9-1-alpine
    ports:
      - "8091:80"  # No SSL port
      - "8092:443" # Yes SSL Port
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ldap_ssl_conf.d:/etc/nginx/conf.d  # Custom Nginx configuration
      - ./nginx/logs:/var/log/nginx
      - ./nginx/certs:/etc/nginx/certs:ro  # Mount the SSL certificates
      - ./server/js:/etc/nginx/html/static/js  # server the static files directly from here, not flask. 
      - ./server/css:/etc/nginx/html/static/css 
      - ./server/static/favicon.ico:/etc/nginx/html/static/favicon.ico


    depends_on:
      - storage_tools_server  # Ensure Nginx starts after the Flask app service

    networks:
      - custom_network  # Attach to the custom network

  redis:
    image: "redis:alpine"
    expose:
      - "6379"
    networks:
      - custom_network  


  storage_tools_server:
    build:
      context: .
    image: storage_tools_server
    container_name: storage_tools_server

    # for extra security, set the Cross Site Origins hostname
    # environment:
    # - HOSTNAME=${HOSTNAME}
    environment:
      - CONFIG=/app/config/config.yaml
      - REDIS_URL=redis://redis:6379/0
      - SERVERNAME=HomeServer

    expose:
     - "8091"  # Expose port 8091 to the internal Docker network
    volumes:
      - ./config/:/app/config
      - ./config/keys.yaml:/app/config/keys.yaml
      - ./uploads:/mnt/uploads  # Volume mount for uploads directory
      - /volume1:/volume1
      - /volume2:/volume2
      - /volume3:/volume3
      - /volume4:/volume4
      - /volume5:/volume5
      - /volume6:/volume6

    tty: true
    stdin_open: true
    restart: always
    networks:
      - custom_network  
    depends_on:
      - redis

networks:
  custom_network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.11.15.0/24  # This subnet shouldn't conflict with the CMU network. 